//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторного создания кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Service
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service.User", Namespace="http://schemas.datacontract.org/2004/07/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%B" +
        "C%D0%BC%D0%B0")]
    public partial class ServiceUser : object
    {
        
        private int idField;
        
        private string loginField;
        
        private string nameField;
        
        private string passwordField;
        
        private string roleField;
        
        private string surnameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string login
        {
            get
            {
                return this.loginField;
            }
            set
            {
                this.loginField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string role
        {
            get
            {
                return this.roleField;
            }
            set
            {
                this.roleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname
        {
            get
            {
                return this.surnameField;
            }
            set
            {
                this.surnameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service.Message", Namespace="http://schemas.datacontract.org/2004/07/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%B" +
        "C%D0%BC%D0%B0")]
    public partial class ServiceMessage : object
    {
        
        private string contentField;
        
        private System.DateTime date_sendField;
        
        private string filesField;
        
        private int id_chatField;
        
        private int id_messageField;
        
        private int sendlerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_send
        {
            get
            {
                return this.date_sendField;
            }
            set
            {
                this.date_sendField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string files
        {
            get
            {
                return this.filesField;
            }
            set
            {
                this.filesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_chat
        {
            get
            {
                return this.id_chatField;
            }
            set
            {
                this.id_chatField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_message
        {
            get
            {
                return this.id_messageField;
            }
            set
            {
                this.id_messageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sendler
        {
            get
            {
                return this.sendlerField;
            }
            set
            {
                this.sendlerField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IService")]
    public interface IService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUsers", ReplyAction="http://tempuri.org/IService/GetUsersResponse")]
        string[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUsers", ReplyAction="http://tempuri.org/IService/GetUsersResponse")]
        System.Threading.Tasks.Task<string[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUser", ReplyAction="http://tempuri.org/IService/GetUserResponse")]
        Service.ServiceUser GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUser", ReplyAction="http://tempuri.org/IService/GetUserResponse")]
        System.Threading.Tasks.Task<Service.ServiceUser> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        string Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendMessage", ReplyAction="http://tempuri.org/IService/SendMessageResponse")]
        void SendMessage(string send_message, int sendler, int id_recepient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendMessage", ReplyAction="http://tempuri.org/IService/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(string send_message, int sendler, int id_recepient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetChatID", ReplyAction="http://tempuri.org/IService/GetChatIDResponse")]
        int GetChatID(int id_user_1, int id_user_2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetChatID", ReplyAction="http://tempuri.org/IService/GetChatIDResponse")]
        System.Threading.Tasks.Task<int> GetChatIDAsync(int id_user_1, int id_user_2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetChatsUsers", ReplyAction="http://tempuri.org/IService/GetChatsUsersResponse")]
        int[] GetChatsUsers(int id_user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetChatsUsers", ReplyAction="http://tempuri.org/IService/GetChatsUsersResponse")]
        System.Threading.Tasks.Task<int[]> GetChatsUsersAsync(int id_user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMessages", ReplyAction="http://tempuri.org/IService/GetMessagesResponse")]
        Service.ServiceMessage[] GetMessages(int id_sendler, int id_recepient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMessages", ReplyAction="http://tempuri.org/IService/GetMessagesResponse")]
        System.Threading.Tasks.Task<Service.ServiceMessage[]> GetMessagesAsync(int id_sendler, int id_recepient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserWLog", ReplyAction="http://tempuri.org/IService/GetUserWLogResponse")]
        Service.ServiceUser GetUserWLog(string Login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserWLog", ReplyAction="http://tempuri.org/IService/GetUserWLogResponse")]
        System.Threading.Tasks.Task<Service.ServiceUser> GetUserWLogAsync(string Login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserLogin", ReplyAction="http://tempuri.org/IService/GetUserLoginResponse")]
        string GetUserLogin(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserLogin", ReplyAction="http://tempuri.org/IService/GetUserLoginResponse")]
        System.Threading.Tasks.Task<string> GetUserLoginAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastMessage", ReplyAction="http://tempuri.org/IService/GetLastMessageResponse")]
        string GetLastMessage(int id_chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastMessage", ReplyAction="http://tempuri.org/IService/GetLastMessageResponse")]
        System.Threading.Tasks.Task<string> GetLastMessageAsync(int id_chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSecondUser", ReplyAction="http://tempuri.org/IService/GetSecondUserResponse")]
        Service.ServiceUser GetSecondUser(int id_owner, int id_chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSecondUser", ReplyAction="http://tempuri.org/IService/GetSecondUserResponse")]
        System.Threading.Tasks.Task<Service.ServiceUser> GetSecondUserAsync(int id_owner, int id_chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUser", ReplyAction="http://tempuri.org/IService/AddUserResponse")]
        void AddUser(Service.ServiceUser _user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUser", ReplyAction="http://tempuri.org/IService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(Service.ServiceUser _user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditUser", ReplyAction="http://tempuri.org/IService/EditUserResponse")]
        void EditUser(Service.ServiceUser _user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditUser", ReplyAction="http://tempuri.org/IService/EditUserResponse")]
        System.Threading.Tasks.Task EditUserAsync(Service.ServiceUser _user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUser", ReplyAction="http://tempuri.org/IService/DeleteUserResponse")]
        void DeleteUser(Service.ServiceUser _user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUser", ReplyAction="http://tempuri.org/IService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(Service.ServiceUser _user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IServiceChannel : Service.IService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Service.IService>, Service.IService
    {
        
        /// <summary>
        /// Реализуйте этот разделяемый метод для настройки конечной точки службы.
        /// </summary>
        /// <param name="serviceEndpoint">Настраиваемая конечная точка</param>
        /// <param name="clientCredentials">Учетные данные клиента.</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceClient() : 
                base(ServiceClient.GetDefaultBinding(), ServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), ServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string[] GetUsers()
        {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<string[]> GetUsersAsync()
        {
            return base.Channel.GetUsersAsync();
        }
        
        public Service.ServiceUser GetUser(int id)
        {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<Service.ServiceUser> GetUserAsync(int id)
        {
            return base.Channel.GetUserAsync(id);
        }
        
        public string Login(string login1, string password)
        {
            return base.Channel.Login(login1, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string login, string password)
        {
            return base.Channel.LoginAsync(login, password);
        }
        
        public void SendMessage(string send_message, int sendler, int id_recepient)
        {
            base.Channel.SendMessage(send_message, sendler, id_recepient);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string send_message, int sendler, int id_recepient)
        {
            return base.Channel.SendMessageAsync(send_message, sendler, id_recepient);
        }
        
        public int GetChatID(int id_user_1, int id_user_2)
        {
            return base.Channel.GetChatID(id_user_1, id_user_2);
        }
        
        public System.Threading.Tasks.Task<int> GetChatIDAsync(int id_user_1, int id_user_2)
        {
            return base.Channel.GetChatIDAsync(id_user_1, id_user_2);
        }
        
        public int[] GetChatsUsers(int id_user)
        {
            return base.Channel.GetChatsUsers(id_user);
        }
        
        public System.Threading.Tasks.Task<int[]> GetChatsUsersAsync(int id_user)
        {
            return base.Channel.GetChatsUsersAsync(id_user);
        }
        
        public Service.ServiceMessage[] GetMessages(int id_sendler, int id_recepient)
        {
            return base.Channel.GetMessages(id_sendler, id_recepient);
        }
        
        public System.Threading.Tasks.Task<Service.ServiceMessage[]> GetMessagesAsync(int id_sendler, int id_recepient)
        {
            return base.Channel.GetMessagesAsync(id_sendler, id_recepient);
        }
        
        public Service.ServiceUser GetUserWLog(string Login)
        {
            return base.Channel.GetUserWLog(Login);
        }
        
        public System.Threading.Tasks.Task<Service.ServiceUser> GetUserWLogAsync(string Login)
        {
            return base.Channel.GetUserWLogAsync(Login);
        }
        
        public string GetUserLogin(int ID)
        {
            return base.Channel.GetUserLogin(ID);
        }
        
        public System.Threading.Tasks.Task<string> GetUserLoginAsync(int ID)
        {
            return base.Channel.GetUserLoginAsync(ID);
        }
        
        public string GetLastMessage(int id_chat)
        {
            return base.Channel.GetLastMessage(id_chat);
        }
        
        public System.Threading.Tasks.Task<string> GetLastMessageAsync(int id_chat)
        {
            return base.Channel.GetLastMessageAsync(id_chat);
        }
        
        public Service.ServiceUser GetSecondUser(int id_owner, int id_chat)
        {
            return base.Channel.GetSecondUser(id_owner, id_chat);
        }
        
        public System.Threading.Tasks.Task<Service.ServiceUser> GetSecondUserAsync(int id_owner, int id_chat)
        {
            return base.Channel.GetSecondUserAsync(id_owner, id_chat);
        }
        
        public void AddUser(Service.ServiceUser _user)
        {
            base.Channel.AddUser(_user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(Service.ServiceUser _user)
        {
            return base.Channel.AddUserAsync(_user);
        }
        
        public void EditUser(Service.ServiceUser _user)
        {
            base.Channel.EditUser(_user);
        }
        
        public System.Threading.Tasks.Task EditUserAsync(Service.ServiceUser _user)
        {
            return base.Channel.EditUserAsync(_user);
        }
        
        public void DeleteUser(Service.ServiceUser _user)
        {
            base.Channel.DeleteUser(_user);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(Service.ServiceUser _user)
        {
            return base.Channel.DeleteUserAsync(_user);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService))
            {
                return new System.ServiceModel.EndpointAddress("http://192.168.0.101:8733/");
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService,
        }
    }
}
